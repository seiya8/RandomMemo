SELECT DISTINCT r.id, r.name, r.sum_star / r.num_customer AS avg_star
FROM restaurants r
JOIN visited_restaurants vr1 ON r.id = vr1.restaurant_id
JOIN visited_restaurants vr2 ON vr1.user_id = vr2.user_id
WHERE vr2.restaurant_id IN (
    SELECT vr3.restaurant_id
    FROM visited_restaurants vr3
    WHERE vr3.user_id = 1
)
AND vr2.user_id <> 1
AND r.id NOT IN (
    SELECT vr4.restaurant_id
    FROM visited_restaurants vr4
    WHERE vr4.user_id = 1
)
ORDER BY avg_star DESC
LIMIT 5;


import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import service.RestaurantService;

@WebServlet("/displayImage")
public class DisplayImageServlet {
    private static final long serialVersionUID = 1L;
    private RestaurantService restaurantService = new restaurantService();

    public DisplayImageServlet() {
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int restaurantId = Integer.parseInt(request.getParameter("id"));
        response.setContentType("image/png");

        byte[] byteArray = restaurantService.getImageBytesByRestaurantId(restaurantId);
        InputStream is = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedIs = new BufferedInputStream(is);
        BufferedImage img = ImageIO.read(bufferedIs);

        OutputStream outputStream = response.getOutputStream();
        ImageIO.write(img, "png", outputStream);
        outputStream.flush();
    }
}

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ユーザー検索</title>
</head>
<body>
  <h1>ユーザー検索</h1>
  <input type="text" id="searchInput" placeholder="ユーザー名を入力">
  <ul id="userList">
  </ul>
  <script>
    const searchUsers = () => {
      const name = document.querySelector("#searchInput").value;

      fetch(`/someapp/searchUser?name=${name}`)
        .then(response => response.json())
        .then(data => {
          const userList = document.querySelector("#userList");
          userList.innerHTML = "";
          data.forEach(user => {
            const li = document.createElement("li");
            li.textContent = user.name;
            userList.appendChild(li);
          });
        })
        .catch(error => console.error('Error:', error));
    }

    document.addEventListener("DOMContentLoaded", function() {
      searchUsers();
      document.querySelector("#searchInput").addEventListener("input", searchUsers);
    });
  </script>
</body>
</html>

public List<User> getUsersByNamePrefix(String name) {
    List<User> users = new ArrayList<>();
    String query = "SELECT id, name from users";
    if (name != null && !name.isEmpty()) query += " WHERE name LIKE ?";
    try (Connection conn = dataSource.getConnection();
            PreparedStatement stmt = conn.prepareStatement(query)) {
        if (name != null && !name.isEmpty()) stmt.setString(1, name+"%");
        ResultSet rs = stmt.executeQuery();
        while (rs.next()) {
            users.add(new User(rs.getInt("id"), rs.getString("name")));
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return users;
}

package servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.google.gson.Gson;

import model.User;
import service.UserService;


@WebServlet("/searchUser")
public class SearchUserServlet extends HttpServlet {
    private UserService userService = new UserService();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String queryName = request.getParameter("name");
        List<User> users = userService.getUsersByNamePrefix(queryName);
        String jsonResponse = new Gson().toJson(users);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
        out.print(jsonResponse);
        out.flush();
    }
}
